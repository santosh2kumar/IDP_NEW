---
apiVersion: v1
kind: Service
metadata:
  name: kibana-headless
spec:
  clusterIP: None
  selector:
    component: kibana
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kibana
  namespace: default
  labels:
    component: kibana
spec:
  serviceName: kibana-headless
  replicas: 1
  selector:
    matchLabels:
     component: kibana
  template:
    metadata:
      labels:
        component: kibana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nodetype
                operator: In
                values:
                - wn05
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:6.3.2
        env:
        - name: "CLUSTER_NAME"
          value: "escluster"
        - name: XPACK_SECURITY_ENABLED
          value: 'false'
        - name: XPACK_GRAPH_ENABLED
          value: 'false'
        - name: XPACK_ML_ENABLED
          value: 'false'
        - name: XPACK_REPORTING_ENABLED
          value: 'false'
        - name: ELASTICSEARCH_URL
          value: 'http://elasticsearch.default.svc:9200'
        resources:
          limits:
            cpu: 1000m
            memory: 25Gi
          requests:
            cpu: 1000m
            memory: 25Gi
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        volumeMounts:
        - name: mapr-storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: mapr-storage
      namespace: default
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: kibana-sc
      resources:
        requests:
          storage: 25Gi
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
spec:
  selector:
    component: kibana
  type: NodePort
  ports:
    - port: 5601
      targetPort: 5601
      nodePort: 31500
