---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-pmem
data:
  update-node.sh: |
    #!/bin/sh
    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}
    exec "$@"
  redis.conf: |+
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no
    save 60 1000
    dbfilename dump.rdb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster-pmem
spec:
  serviceName: redis-cluster-pmem
  replicas: {{ .Values.redisReplicas }}
  selector:
    matchLabels:
      app: redis-cluster-pmem
  template:
    metadata:
      labels:
        app: redis-cluster-pmem
    spec:
      affinity:
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#            - matchExpressions:
#              - key: storage
#                operator: In
#                values: 
#                - pmem
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - redis-cluster-pmem
              topologyKey: kubernetes.io/hostname
      containers:
      - name: redis
        image: {{ .Values.image }}
        securityContext:
          allowPrivilegeEscalation: false
          seLinuxOptions:
            level: "s0:c123,c456"
          readOnlyRootFilesystem: true
        resources:
          requests:
            memory: "{{ .Values.resources.redismemory }}"
            cpu: {{ .Values.resources.rediscpu }}
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["/conf/update-node.sh", "redis-server", "/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: redis-conf-pmem
          mountPath: /conf
          readOnly: false
        - name: redis-pmem
          mountPath: /data
          readOnly: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: redis-conf-pmem
        configMap:
          name: redis-cluster-pmem
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: redis-pmem
      namespace: default
    spec:
      accessModes: 
        - ReadWriteOnce
      storageClassName: redissc-pmem
      resources:
        requests:
          storage: {{ .Values.resources.storage }}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-pmem
spec:
  clusterIP: None
  ports:
  - port: 6379
    targetPort: 6379
    name: client
  - port: 16379
    targetPort: 16379
    name: gossip
  selector:
    app: redis-cluster-pmem
---
