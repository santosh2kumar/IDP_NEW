---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  serviceName: grafana-headless
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: nodetype
                operator: In
                values:
                - wn05
      containers:
      - name: grafana
        image: grafana/grafana:7.4.1
        securityContext:
          allowPrivilegeEscalation: false
          seLinuxOptions:
            level: "s0:c123,c456"
#          readOnlyRootFilesystem: true
        ports:
        - name: grafana
          containerPort: 3000
        env:
        - name: GF_INSTALL_PLUGINS
          value : "redis-datasource,https://github.com/HadesArchitect/GrafanaCassandraDatasource/releases/download/0.4.2/cassandra-datasource-0.4.2.zip;custom-plugin"
        - name: GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS
          value : "hadesarchitect-cassandra-datasource"
        resources:
          limits:
            memory: "5Gi"
            cpu: "1000m"
          requests: 
            memory: "5Gi"
            cpu: "1000m"
        volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-mapr
            readOnly: false
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: grafana-mapr
      namespace: default
    spec:
      accessModes:
        - ReadWriteOnce
      storageClassName: grafanasc
      resources:
        requests:
          storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-headless
spec:
  clusterIP: None
  selector:
    app: grafana
